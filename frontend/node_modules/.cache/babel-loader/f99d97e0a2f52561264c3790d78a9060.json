{"remainingRequest":"/Users/echo_logic/Desktop/projects/MaorBarel/frontend/node_modules/babel-loader/lib/index.js!/Users/echo_logic/Desktop/projects/MaorBarel/frontend/node_modules/eslint-loader/index.js??ref--13-0!/Users/echo_logic/Desktop/projects/MaorBarel/frontend/src/store.js","dependencies":[{"path":"/Users/echo_logic/Desktop/projects/MaorBarel/frontend/src/store.js","mtime":1554581031565},{"path":"/Users/echo_logic/Desktop/projects/MaorBarel/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/echo_logic/Desktop/projects/MaorBarel/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/echo_logic/Desktop/projects/MaorBarel/frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Vue from 'vue';\nimport Vuex from 'vuex';\nimport MsgService from './services/Msg.service.js';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    msgs: null,\n    filter: ''\n  },\n  mutations: {\n    setMsgs: function setMsgs(state, msgs) {\n      state.msgs = msgs;\n    },\n    setFilter: function setFilter(state, filter) {\n      state.filter = filter;\n    }\n  },\n  getters: {\n    msgs: function msgs(state) {\n      return state.msgs;\n    }\n  },\n  actions: {\n    remove: function remove(context, msgId) {\n      MsgService.remove(msgId).then(function () {\n        context.dispatch('query');\n      });\n    },\n    addMsg: function addMsg(context, msg) {\n      MsgService.addMsg(msg).then(function () {\n        context.dispatch('query');\n      });\n    },\n    query: function query(context, filter) {\n      context.commit('setFilter', filter);\n      var filter = context.state.filter;\n      MsgService.query(filter).then(function (msgs) {\n        context.commit('setMsgs', msgs);\n      });\n    }\n  }\n});",{"version":3,"sources":["/Users/echo_logic/Desktop/projects/MaorBarel/frontend/src/store.js"],"names":["Vue","Vuex","MsgService","use","Store","state","msgs","filter","mutations","setMsgs","setFilter","getters","actions","remove","context","msgId","then","dispatch","addMsg","msg","query","commit"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AAEAF,GAAG,CAACG,GAAJ,CAAQF,IAAR;AAEA,eAAe,IAAIA,IAAI,CAACG,KAAT,CAAe;AAC5BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,IAAI,EAAE,IADD;AAELC,IAAAA,MAAM,EAAE;AAFH,GADqB;AAK5BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,OADS,mBACDJ,KADC,EACMC,IADN,EACY;AACnBD,MAAAA,KAAK,CAACC,IAAN,GAAaA,IAAb;AACD,KAHQ;AAITI,IAAAA,SAJS,qBAICL,KAJD,EAIQE,MAJR,EAIe;AACtBF,MAAAA,KAAK,CAACE,MAAN,GAAeA,MAAf;AACD;AANQ,GALiB;AAa5BI,EAAAA,OAAO,EAAE;AACPL,IAAAA,IADO,gBACFD,KADE,EACK;AACV,aAAOA,KAAK,CAACC,IAAb;AACD;AAHM,GAbmB;AAkB5BM,EAAAA,OAAO,EAAE;AACPC,IAAAA,MADO,kBACAC,OADA,EACSC,KADT,EACe;AACpBb,MAAAA,UAAU,CAACW,MAAX,CAAkBE,KAAlB,EAAyBC,IAAzB,CAA8B,YAAM;AAClCF,QAAAA,OAAO,CAACG,QAAR,CAAiB,OAAjB;AACD,OAFD;AAGD,KALM;AAMPC,IAAAA,MANO,kBAMAJ,OANA,EAMSK,GANT,EAMc;AACnBjB,MAAAA,UAAU,CAACgB,MAAX,CAAkBC,GAAlB,EAAuBH,IAAvB,CAA4B,YAAM;AAChCF,QAAAA,OAAO,CAACG,QAAR,CAAiB,OAAjB;AACD,OAFD;AAGD,KAVM;AAWPG,IAAAA,KAXO,iBAWDN,OAXC,EAWQP,MAXR,EAWgB;AACrBO,MAAAA,OAAO,CAACO,MAAR,CAAe,WAAf,EAA4Bd,MAA5B;AACA,UAAIA,MAAM,GAAGO,OAAO,CAACT,KAAR,CAAcE,MAA3B;AACAL,MAAAA,UAAU,CAACkB,KAAX,CAAiBb,MAAjB,EAAyBS,IAAzB,CAA8B,UAAAV,IAAI,EAAI;AACpCQ,QAAAA,OAAO,CAACO,MAAR,CAAe,SAAf,EAA0Bf,IAA1B;AACD,OAFD;AAGD;AAjBM;AAlBmB,CAAf,CAAf","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport MsgService from './services/Msg.service.js'\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  state: {\n    msgs: null,\n    filter: '',\n  },\n  mutations: {\n    setMsgs(state, msgs) {\n      state.msgs = msgs\n    },\n    setFilter(state, filter){\n      state.filter = filter\n    }\n  },\n  getters: {\n    msgs(state) {\n      return state.msgs\n    }\n  },\n  actions: {\n    remove(context, msgId){\n      MsgService.remove(msgId).then(() => {\n        context.dispatch('query')\n      })\n    },\n    addMsg(context, msg) {\n      MsgService.addMsg(msg).then(() => {\n        context.dispatch('query')\n      })\n    },\n    query(context, filter) {\n      context.commit('setFilter', filter);\n      var filter = context.state.filter;\n      MsgService.query(filter).then(msgs => {\n        context.commit('setMsgs', msgs)\n      })\n    },\n  },\n})\n"]}]}